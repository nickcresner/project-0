"use strict";$(function(){function t(){W=setInterval(function(){!0===Z&&(_--,h.html(_),0===_&&(clearInterval(W),h.hide(),d.show(),H=!1,!0===j?K+=5e3:N+=5e3))},1e3)}console.log("JS Loaded");var e=$(".map"),o=$(".welcome"),n=$(".map-select"),i=$(".chosen-map"),a=$(".quiz-select"),l=($(".quiz-select.london"),$(".quiz-select.new-york"),$(".quiz-select.madrid"),$(".quiz-select.hong-kong"),$(".chosen-quiz")),s=$(".start-game-button"),c=$(".question"),r=$(".round-question"),u=$(".start-round-button"),h=$(".countdown-timer"),d=$(".time-up"),p=$(".countdown-next-button"),g=$(".player-one-flag"),f=$(".player-two-flag"),w=$(".player-twos-turn"),m=$(".player-twos-turn-button"),y=$(".answer-location"),v=$(".end-of-round"),x=$(".p1-distance-away"),q=$(".p2-distance-away"),M=$(".player-1-score"),k=$(".player-2-score"),z=$(".next-round-button"),L=$(".end-of-game"),T=$(".p1-overall-distance-from-targets"),b=$(".p2-overall-distance-from-targets"),C=$(".winner"),I=$(".play-again-button"),P=null,X=null,Y=null,A=0,J=0,O=0,S=0,j=!0,B=0,D=0,E=0,F=0,G=0,H=!1,K=0,N=0,Q=0,R=0,U="",V=0;setTimeout(function(){o.show(),n.on("change",function(t){X=$(t.target).val();var o=$(".map-select option[value="+X+"]").html();i.text(o),e.removeAttr("class").addClass("map").addClass(X),a.removeClass("selected").filter("."+X).addClass("selected")}),a.on("change",function(t){P=$(t.target).val(),console.log("quiz select array in event listener",a),console.log(X);var e=$(".quiz-select."+X+" option[value="+P+"]").html();l.text(e),V=window.questions[X][P]})},1e3),s.on("click",function(){if(!X||!P)return!1;o.hide(),Y=V[B].name,setTimeout(function(){r.text(Y),console.log(Y),c.show()},250)});var W=null,Z=!1,_=30;p.on("click",function(){!0===j?(w.show(),d.hide(),j=!1):(v.show(),d.hide())}),u.on("click",function(){c.hide(),H=!0,Z=!0,_=30,h.show(),t(),Z=!0}),e.on("click",function(t){if(!0===H)if(Z=!1,clearInterval(W),!0===j){A=t.pageX-$(t.target).position().left,J=t.pageY-$(t.target).position().top;var o=A/e.width()*100,n=J/e.height()*100;console.log(o),console.log(n),console.log("questions array [0]",V[0]);var i=o-V[B].xLocation,a=n-V[B].yLocation;D=Math.floor(Math.sqrt(Math.pow(i,2)+Math.pow(a,2))),g.css({left:o+"%",top:n+"%",display:"inline"}),w.show(),H=!1,j=!1}else if(!1===j){O=t.pageX-$(t.target).position().left,S=t.pageY-$(t.target).position().top;var l=O/e.width()*100,s=S/e.height()*100;console.log(l),console.log(s);var c=l-V[B].xLocation,r=s-V[B].yLocation;E=Math.floor(Math.sqrt(Math.pow(c,2)+Math.pow(r,2))),f.css({left:l+"%",top:s+"%",display:"inline"}),D<E?K++:D===E?(K++,N++):N++,F=1e3/6*D,G=1e3/6*E,setTimeout(function(){y.css({left:V[B].xLocation-$(t.target).position().left+"%",top:V[B].yLocation-$(t.target).position().top+"%",display:"inline"})},1e3),setTimeout(function(){H=!1,v.show(),F=Math.round(F),G=Math.round(G),Q+=F,R+=G,x.html(F),q.html(G),M.text(K),k.text(N),T.text(Q),b.text(R)},2e3)}}),m.on("click",function(){H=!0,w.hide(),h.show(),_=30,Z=!0,t()}),z.on("click",function(){v.hide(),y.hide(),g.hide(),f.hide(),B++,B>=V.length?(console.log("end game sequence"),L.show(),M.text(K),k.text(N),T.text(Q),b.text(R),U=K>N?"Player One":K===N?"It's a Tie!":"Player Two",C.text(U),I.on("click",function(){L.hide(),o.show(),B=0,Q=0,R=0,K=0,N=0})):(console.log(B),Y=V[B].name,j=!0,r.text(Y),setTimeout(function(){c.css({display:"inline"})},250))})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
