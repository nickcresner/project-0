"use strict";$(function(){console.log("JS Loaded");var o=$(".map"),t=$(".player-one-flag"),n=$(".player-two-flag"),a=$(".answer-location"),i=0,l=0,e=0,c=0,s=!0,r=0,h=0,p={xLocation:84,yLocation:59},d={xLocation:28,yLocation:61},w={xLocation:33,yLocation:32},g=[p,d,w];o.on("click",function(o){if(!0===s){i=o.pageX,l=o.pageY;var p=Math.round(i/$(window).width()*100),d=Math.round(l/$(window).height()*100);console.log(p),console.log(d);var w=p-g[0].xLocation,y=d-g[0].yLocation;r=Math.floor(Math.sqrt(Math.pow(w,2)+Math.pow(y,2))),console.log("distance from target "+r),s=!1,console.log("player 2 turn"),t.css({left:p+"%",top:d+"%",display:"inline"})}else{e=o.pageX,c=o.pageY;var L=Math.round(e/$(window).width()*100),f=Math.round(c/$(window).height()*100),M=L-g[0].xLocation,u=f-g[0].yLocation;h=Math.floor(Math.sqrt(Math.pow(M,2)+Math.pow(u,2))),r<h?console.log("player 1 wins this round!"):console.log("player 2 wins this round!"),n.css({left:L+"%",top:f+"%",display:"inline"}),setInterval(function(){a.css({left:g[0].xLocation+"%",top:g[0].yLocation+"%",display:"inline"})},2e3)}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
