"use strict";$(function(){console.log("JS Loaded");var o=$(".map"),t=$(".welcome"),n=$(".map-select"),e=$(".chosen-map"),a=$(".quiz-select"),i=$(".chosen-quiz"),c=$(".start-game-button"),l=$(".question"),s=$(".round-question"),r=$(".start-round-button"),u=$(".player-one-flag"),g=$(".player-two-flag"),h=$(".player-twos-turn"),m=$(".player-twos-turn-button"),y=$(".answer-location"),d=$(".end-of-round"),L=$(".p1-distance-away"),p=$(".p2-distance-away"),x=$(".player-1-score"),f=$(".player-2-score"),w=$(".next-round-button"),v=$(".end-of-game"),k=$(".p1-overall-distance-from-targets"),q=$(".p2-overall-distance-from-targets"),M=$(".winner"),S=$(".play-again-button"),C=null,T=null,b=null,P=0,F=0,G=0,A=0,B=!0,z=0,O=0,V=0,X=0,Y=0,H=!1,I=0,J=0,K=0,R=0,j="",D={easy:[{name:"The O2 Centre",xLocation:82,yLocation:58},{name:"Buckingham Palace",xLocation:29,yLocation:60},{name:"Kings Cross Station",xLocation:37,yLocation:30},{name:"General Assembly",xLocation:54,yLocation:45},{name:"Big Ben",xLocation:36,yLocation:61}],medium:[{name:"Lord's Cricket Ground",xLocation:19,yLocation:32},{name:"Chelsea FC",xLocation:11,yLocation:81},{name:"Charlton FC",xLocation:95,yLocation:76},{name:"Lee Valley Velodrome",xLocation:74,yLocation:12}],hard:[{name:"Baker Street Station",xLocation:25,yLocation:38},{name:"Green Park Station",xLocation:29,yLocation:54},{name:"Farringdon Station",xLocation:43,yLocation:41},{name:"Angel Station",xLocation:43,yLocation:29},{name:"Camden Town Station",xLocation:28,yLocation:22}],veryHard:[{name:"Granary Square",xLocation:36,yLocation:26},{name:"Finsbury Square",xLocation:50,yLocation:40},{name:"Grosvenor Square",xLocation:26,yLocation:49},{name:"Lincoln Inn's Fields",xLocation:39,yLocation:45},{name:"Russell Square",xLocation:35,yLocation:39}]},E=0;setTimeout(function(){t.show(),n.on("change",function(t){T=$(t.target).val();var n=$(".map-select option[value="+T+"]").html();e.text(n),o.removeAttr("class").addClass("map").addClass(T)}),a.on("change",function(o){C=$(o.target).val();var t=$(".quiz-select option[value="+C+"]").html();i.text(t),E=D[C],console.log(C)})},1e3),c.on("click",function(){if(console.log("clickety click!"),!T||!C)return!1;console.log(t),t.hide(),b=E[z].name,setTimeout(function(){s.text(b),console.log(b),l.show()},250)}),r.on("click",function(){l.hide(),H=!0}),o.on("click",function(t){if(!0===H)if(!0===B){P=t.pageX-$(t.target).position().left,F=t.pageY-$(t.target).position().top;var n=P/o.width()*100,e=F/o.height()*100;console.log(n),console.log(e),console.log("questions array [0]",E[0]);var a=n-E[z].xLocation,i=e-E[z].yLocation;O=Math.floor(Math.sqrt(Math.pow(a,2)+Math.pow(i,2))),u.css({left:n+"%",top:e+"%",display:"inline"}),h.show(),H=!1,B=!1}else if(!1===B){G=t.pageX-$(t.target).position().left,A=t.pageY-$(t.target).position().top;var c=Math.round(G/o.width()*100),l=Math.round(A/o.height()*100);console.log(c),console.log(l);var s=c-E[z].xLocation,r=l-E[z].yLocation;V=Math.floor(Math.sqrt(Math.pow(s,2)+Math.pow(r,2))),g.css({left:c+"%",top:l+"%",display:"inline"}),O<V?(console.log("player 1 wins this round!"),I++):O===V?console.log("its a tie!"):(console.log("player 2 wins this round!"),J++),X=1e3/6*O,Y=1e3/6*V,console.log("Player 1 clicked "+X+"m away from the target"),console.log("Player 2 clicked "+Y+"m away from the target"),setTimeout(function(){y.css({left:E[z].xLocation-$(t.target).position().left+"%",top:E[z].yLocation-$(t.target).position().top+"%",display:"inline"})},1e3),setTimeout(function(){H=!1,d.show(),X=Math.round(X),Y=Math.round(Y),console.log(X),console.log(Y),K+=X,R+=Y,L.html(X),p.html(Y),x.text(I),f.text(J),k.text(K),q.text(R)},2e3)}}),m.on("click",function(){H=!0,h.hide()}),w.on("click",function(){d.hide(),y.hide(),u.hide(),g.hide(),console.log("questionsArray length"+E.length),z++,z>=E.length?(console.log("end game sequence"),v.show(),x.text(I),f.text(J),k.text(K),q.text(R),j=I>J?"Player One":"Player Two",M.text(j),S.on("click",function(){v.hide(),t.show()})):(console.log(z),b=E[z].name,B=!0,s.text(b),setTimeout(function(){l.css({display:"inline"})},250))})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
